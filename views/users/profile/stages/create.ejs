<script type="text/javascript">
  const existingNameErrorCode = +"<%= fns.getErrorCode('EXISTING_MODEL_NAME') %>"
  const tooLargeErrorCode = +"<%= fns.getErrorCode('TOO_LARGE') %>"
  const wrongPassErrorCode = +"<%= fns.getErrorCode('WRONG_PASSWORD') %>"
  const wrongRegexp = new RegExp('<%- fns.getWrongPatterns() %>')
</script>

<!-- Page Content -->
<div class="container-fluid">
  <div class="clearfix">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4 float-left">
      <h1 class="h3 mb-0 text-gray-800">Crear nuevo escenario</h1>    
    </div>  <!-- .Page Heading -->
    </a>
  </div>

  <!-- Breadcrumb -->
  <div class="row">
    <div class="col-12">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/profile/stages">Lista</a></li>
          <li class="breadcrumb-item active" aria-current="page">Crear nuevo escenario</li>
        </ol>
      </nav>
    </div>
  </div>  <!-- .Breadcrumb -->

  <!-- Button -->
  <div class="row mb-3">
    <div class="col-12 col-md-auto">
      <button type="button" id="create-stage-btn" class="btn btn-info btn-block btn-flat" onclick="createStage()">Crear escenario</button>
    </div>
  </div>  <!-- .Button -->

  <!-- Data -->
  <div class="row">
    <!-- Stage Data -->
    <div id="stage-data" class="col-12 col-lg-6 mb-2">
      <!-- Card -->
      <div class="card border-left-success">
        <h5 class="card-header font-weight-bold text-primary">Datos escenario</h5>
        <!-- Body -->
        <div class="card-body">
          <form>
            <!-- Name -->
            <div class="form-group">
              <label for="create-stage-name">Nombre</label>
              <input type="text" class="form-control" id="create-stage-name" placeholder="Parque eólico" required>
            </div>  <!-- .Name -->

            <!-- Id -->
            <div class="form-group">
              <label for="create-stage-id">Identificador</label>
              <input type="text" class="form-control" id="create-stage-id" placeholder="escenario1" required>
            </div>  <!-- .Id -->

            <!-- Model -->
            <div class="form-group">
              <label for="create-stage-model">Modelos</label>
              <select class="form-control" id="create-stage-model" onchange="checkModel(this.value)" required>
                <option>-- Selecciona --</option>
                <% for (let i in userModels) { %>
                <option><%= userModels[i].name %></option>
                <% } if (!userModels || userModels.length === 0) { %>
                <option>Subir modelo</option>
                <% } %>
              </select>
            </div>  <!-- .Model -->
          </form>
        </div>  <!-- .Body -->
      </div>  <!-- .Card -->
    </div>  <!-- .Stage Data -->

    <!-- Model Data -->
    <div id="model-data" class="col-12 col-lg-6 mb-2" hidden>
      <!-- Card -->
      <div class="card border-left-info" style="background-color: rgba(0,0,0,0);">
        <h5 class="card-header font-weight-bold text-primary">Datos modelo</h5>
        <!-- Body -->
        <div class="card-body">
          <!-- .Model -->
          <div id="models-list" class="row model-show">
          </div>  <!-- .Model -->
        </div>  <!-- .Body -->
      </div>  <!-- .Card -->
    </div>  <!-- .Model Data -->

    <!-- Actions Data -->
    <div id="actions-data" class="col-12" hidden>
      <!-- Card -->
      <div class="card border-left-warning">
        <h5 class="card-header font-weight-bold text-primary">Datos de acciones</h5>
        <!-- Body -->
        <div class="card-body">
          <!-- Actions -->
          <div class="row">
            
          </div>  <!-- .Actions -->
        </div>  <!-- .Body -->
      </div>  <!-- .Card -->
    </div>  <!-- .Actions Data -->

  </div>   <!-- .Data -->
</div>  <!-- .Page Content -->

<!-- Upload modal -->
<div class="modal fade" id="upload-modal" tabindex="-1" role="dialog" aria-labelledby="upload-modal-label" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <!-- Modal header -->
      <div class="modal-header">
        <h5 class="modal-title" id="upload-modal-label">Subir fichero</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>  <!-- .Modal header -->

      <!-- Modal body -->
      <div class="modal-body">
        <form id="upload-form">
          <div class="form-group">
            <label for="model-name">Nombre</label>
            <input type="text" class="form-control" id="model-name" name="model-name">
            <div class="form-group-error" data-err="Se debe rellenar el nombre del fichero"><small class="form-text text-danger"></small></div>
          </div>
          <div class="form-group">
            <label for="model-file">Fichero glb</label>
            <input type="file" class="form-control-file" id="model-file" name="model-file" accept=".glb">
            <div class="form-group-error" data-err="Se debe proporcionar un fichero"><small class="form-text text-danger"></small></div>
          </div>
        </form>
      </div>   <!-- .Modal body -->

      <!-- Modal footer -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
        <button id="upload-btn" type="submit" class="btn btn-primary" onclick="uploadFile()">Subir</button>
      </div>  <!-- .Modal footer -->
    </div>
  </div>
</div>  <!-- .Upload modal -->

<!-- Three JS -->
<script type="text/javascript" src="/components/three/build/three.min.js"></script>
<script type="text/javascript" src="/components/three/examples/js/controls/OrbitControls.js"></script>
<script type="text/javascript" src="/components/three/examples/js/WebGL.js"></script>
<script type="text/javascript" src="/components/three/examples/js/loaders/GLTFLoader.js"></script>
<script type="text/javascript" src="/components/three/examples/js/geometries/BoxLineGeometry.js"></script>

<script id="template" type="notjs">
  <div id="$name" class="progress">
    <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
  </div>
  <div class="model-body"></div>
</script>

<script id="template-model-actions" type="notjs">
  <!-- Action -->
  <div id="action-$n" class="col-12 col-lg-6 mb-3">
    <!-- Action Card -->
    <div class="card">
      <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-secondary">Acción</h6>
        <a href="javascript:void(0);" role="button" onclick="removeAction($n)">
          <i class="fas fa-times"></i>
        </a>
      </div>
      <!-- Action body -->
      <div class="card-body">
        <!-- Action form -->
        <form id="form-action-$n">
          <!-- Name -->
          <div class="form-group">
            <label>Nombre</label>
            <input type="text" class="form-control action-name" placeholder="volar" required>
          </div>  <!-- .Name -->
          <div id="action-animations-$n">
            $animationForm
            <a href="javascript:void(0);" role="button" onclick="addAnimation($n, this)">+ Añadir animación</a>
          </div>
        </form>  <!-- .Action form -->
      </div>  <!-- .Action body -->
    </div>  <!-- .Action Card -->
  </div>  <!-- .Action -->
</script>

<script id="template-model-animations" type="notjs">
  <!-- Animations form -->
  <div id="form-animation-$n-$y" class="border-top border-warning pt-2 mt-2">
    <!-- Animation -->
    <div class="form-group">
      <label>Animación</label>
      <select class="form-control action-animations" required>
        <option>-- Selecciona --</option>
        $selectOptions
      </select>
    </div>  <!-- .Animation -->

    <!-- Repeat -->
    <div class="form-group">
      <label>Repeticiones</label>
      <input type="number" class="form-control action-repeat" placeholder="0" min="0"  data-toggle="tooltip" data-placement="top" title="0 para infinito" required>
    </div>  <!-- .Repeat -->

    <!-- Fin -->
    <div class="form-check form-check-inline">
      <input class="form-check-input" type="radio" name="action-fin-$y" value="end" checked>
      <label class="form-check-label">
        Acabar en el último <em>frame</em>
      </label>
    </div>
    <div class="form-check form-check-inline">
      <input class="form-check-input" type="radio" name="action-fin-$y" value="start">
      <label class="form-check-label">
        Acabar en el primer <em>frame</em>
      </label>
    </div>  <!-- .Fin -->

    <!-- Invers -->
    <div class="form-check">
      <input class="form-check-input" type="checkbox" value="" name="action-invers-$y">
      <label class="form-check-label">
        Invertir animación
      </label>
    </div>  <!-- Invers -->
  </div>  <!-- .Animation form -->
</script>

<script id="template-model-options" type="notjs">
  <!-- Edit -->
  <div id="edit-model-stage" class="col-12 col-lg-4">
    <!-- Scale -->
    <div class="row mb-1">
      <div class="col-12">
        <a class="btn btn-sm btn-info shadow-sm btn-icon-split w-100">
          <span class="text text-white w-100">Escalar</span>
          <span id="minus-scale" class="icon text-white-50 w-100">
            <i class="fas fa-minus"></i>
          </span>
          <span id="plus-scale" class="icon text-white-50 w-100">
            <i class="fas fa-plus"></i>
          </span>
        </a>
      </div>
    </div>  <!-- Scale -->

    <!-- RotateX -->
    <div class="row mb-1">
      <div class="col-12">
        <a class="btn btn-sm btn-info shadow-sm btn-icon-split w-100">
          <span class="text text-white w-100">RotarX</span>
          <span id="minus-rotate-x" class="icon text-white-50 w-100">
            <i class="fas fa-arrow-left"></i>
          </span>
          <span id="plus-rotate-x" class="icon text-white-50 w-100">
            <i class="fas fa-arrow-right"></i>
          </span>
        </a>
      </div>
    </div>  <!-- .RotateX -->

    <!-- RotateY -->
    <div class="row mb-1">
      <div class="col-12">
        <a class="btn btn-sm btn-info shadow-sm btn-icon-split w-100">
          <span class="text text-white w-100">RotarY</span>
          <span id="minus-rotate-y" class="icon text-white-50 w-100">
            <i class="fas fa-arrow-left"></i>
          </span>
          <span id="plus-rotate-y" class="icon text-white-50 w-100">
            <i class="fas fa-arrow-right"></i>
          </span>
        </a>
      </div>
    </div>  <!-- .RotateY -->

    <!-- RotateZ -->
    <div class="row mb-1">
      <div class="col-12">
        <a class="btn btn-sm btn-info shadow-sm btn-icon-split w-100">
          <span class="text text-white w-100">RotarZ</span>
          <span id="minus-rotate-z" class="icon text-white-50 w-100">
            <i class="fas fa-arrow-left"></i>
          </span>
          <span id="plus-rotate-z" class="icon text-white-50 w-100">
            <i class="fas fa-arrow-right"></i>
          </span>
        </a>
      </div>
    </div>  <!-- .RotateZ -->

    <!-- Add Action -->
    <div class="row mb-1 mt-3">
      <div class="col-12">
        <a class="btn btn-sm btn-warning shadow-sm btn-icon-split w-100" onclick="newAction()">
          <span class="text text-white">Añadir acción</span>
        </a>
      </div>
    </div>  <!-- .Add Action -->

    <!-- Add Event -->
    <div class="row mb-1">
      <div class="col-12">
        <a class="btn btn-sm btn-danger shadow-sm btn-icon-split w-100">
          <span class="text text-white">Añadir evento</span>
        </a>
      </div>
    </div>  <!-- .Add Event -->
  </div>  <!-- .Edit -->
</script>

<!-- Custom JS -->
<script type="text/javascript" src="/javascripts/models.js"></script>
<script type="text/javascript" src="/javascripts/showModels.js"></script>
<script type="text/javascript" src="/javascripts/stages.js"></script>

<script type="text/javascript">
  $('#upload-modal').on('hidden.bs.modal', function(e) {
      location.reload()
  })

  const addAnimation = function(action, self) {
      let animations = getAnimations()
      let animationsTemplate = document.getElementById('template-model-animations').text
      let nAnimations = $(`#action-animations-${action}`)[0].children.length

      animationsTemplate = animationsTemplate.replace(/\$y/g, nAnimations)
      animationsTemplate = animationsTemplate.replace(/\$selectOptions/g, animations.map((animation) => `<option>${animation}</option>`).join(''))
      animationsTemplate = animationsTemplate.replace(/\$n/g, action)

      $(self).before(animationsTemplate)
  }

  const checkModel = async function(value) {
      value = value || $('#create-stage-model').val()
      if (value === 'Subir modelo') {
          $('#model-data')[0].hidden = true
          $('#actions-data')[0].hidden = true
          $('#models-list')[0].innerHTML = ''
          $('#upload-modal').modal('show')
      } else if (value === '-- Selecciona --') {
          $('#model-data')[0].hidden = true
          $('#actions-data')[0].hidden = true
          $('#models-list')[0].innerHTML = ''
      } else {
          let actions = $('#actions-data').find('.card-body').find('.row')
          actions.text('')
          $('#model-data')[0].hidden = false
          $('#actions-data')[0].hidden = true
          await showModelByName(value, 'model-data')
          showExtraOptions()
      }
  }

  const newAction = function() {
      let actionData = $('#actions-data')
      let actions = $('#actions-data').find('.card-body').find('.row')
      let actionsTemplate = document.getElementById('template-model-actions').text
      let animations = getAnimations()
      let animationsTemplate = document.getElementById('template-model-animations').text
      let nActions = actions[0].children.length

      animationsTemplate = animationsTemplate.replace(/\$y/g, 1)
      animationsTemplate = animationsTemplate.replace(/\$selectOptions/g, animations.map((animation) => `<option>${animation}</option>`).join(''))
      actionsTemplate = actionsTemplate.replace(/\$animationForm/g, animationsTemplate)
      actionsTemplate = actionsTemplate.replace(/\$n/g, nActions + 1)

      actions.append(actionsTemplate)
      actionData[0].hidden = false
  }

  const removeAction = function(action) {
      let actions = $('#actions-data').find('.card-body').find('.row')
      let div = $(`div#action-${action}`)
      let nActions = actions[0].children.length
      
      div.addClass('hidden')
      div[0].hidden = true

      let nHiddens = $('div[id^=action-].hidden').length
      if (nHiddens === nActions)
          $('#actions-data')[0].hidden = true
  }

  const showExtraOptions = function() {
      let extraOptions = document.getElementById('template-model-options').text
      $('#models-list').append(extraOptions)

      // Rotate X
      let btnRotateXMinus = $('#minus-rotate-x')
      let btnRotateXPlus = $('#plus-rotate-x')
      // Rotate Y
      let btnRotateYMinus = $('#minus-rotate-y')
      let btnRotateYPlus = $('#plus-rotate-y')
      // Rotate Z
      let btnRotateZMinus = $('#minus-rotate-z')
      let btnRotateZPlus = $('#plus-rotate-z')
      // Scale
      let btnScaleMinus = $('#minus-scale')
      let btnScalePlus = $('#plus-scale')

      let timer = null

      // Rotate X

      btnRotateXMinus.on('mousedown', function() {
          rotate('-', 'x')
          timer = setInterval(function() {
              rotate('-', 'x')
          }, 100)
      })

      btnRotateXMinus.on('mouseup', function() {
          clearInterval(timer)
      })

      btnRotateXPlus.on('mousedown', function() {
          rotate('+', 'x')
          timer = setInterval(function() {
              rotate('+', 'x')
          }, 100)
      })

      btnRotateXPlus.on('mouseup', function() {
          clearInterval(timer)
      })

      // Rotate Y

      btnRotateYMinus.on('mousedown', function() {
          rotate('-', 'y')
          timer = setInterval(function() {
              rotate('-', 'y')
          }, 100)
      })

      btnRotateYMinus.on('mouseup', function() {
          clearInterval(timer)
      })

      btnRotateYPlus.on('mousedown', function() {
          rotate('+', 'y')
          timer = setInterval(function() {
              rotate('+', 'y')
          }, 100)
      })

      btnRotateYPlus.on('mouseup', function() {
          clearInterval(timer)
      })

      // Rotate Z

      btnRotateZMinus.on('mousedown', function() {
          rotate('-', 'z')
          timer = setInterval(function() {
              rotate('-', 'z')
          }, 100)
      })

      btnRotateZMinus.on('mouseup', function() {
          clearInterval(timer)
      })

      btnRotateZPlus.on('mousedown', function() {
          rotate('+', 'z')
          timer = setInterval(function() {
              rotate('+', 'z')
          }, 100)
      })

      btnRotateZPlus.on('mouseup', function() {
          clearInterval(timer)
      })

      // Scale

      btnScaleMinus.on('mousedown', function() {
          scale('-')
          timer = setInterval(function() {
              scale('-')
          }, 100)
      })

      btnScaleMinus.on('mouseup', function() {
          clearInterval(timer)
      })

      btnScalePlus.on('mousedown', function() {
          scale('+')
          timer = setInterval(function() {
              scale('+')
          }, 100)
      })

      btnScalePlus.on('mouseup', function() {
          clearInterval(timer)
      })
  }

  $(function() {
      checkModel()
      $('[data-toggle="tooltip"]').tooltip()
  })
</script>
